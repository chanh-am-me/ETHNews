# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      target: final
    ports:
      - 8080:8080
    develop:
      watch:
        - action: rebuild
          path: .

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    depends_on:
      db:
        condition: service_healthy
  db:
    container_name: postgres
    image: postgres:latest
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=telegram-bot-debug
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=duong123
      - POSTGRES_HOST_AUTH_METHOD="trust"  # Allow all connections without password
      - POSTGRES_LISTEN_ADDRESSES="*"      # Listen on all addresses
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
   container_name: pgadmin4
   image: dpage/pgadmin4:latest
   restart: always
   environment:
     PGADMIN_DEFAULT_EMAIL: admin@admin.com
     PGADMIN_DEFAULT_PASSWORD: chanhdb
     PGADMIN_LISTEN_PORT: 80
   ports:
     - "9000:80"
   volumes:
     - pgadmin-data:/var/lib/pgadmin1
volumes:
  db-data:
  pgadmin-data: